name: Check PR

on:
  pull_request:

jobs:
  testing:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: npm i

    - name: Run tests
      run: npm run test

    - name: Run linter
      run: npm run lint

    - name: Check PR status
      run: |
        if [[ ${{ job.status }} == "success" ]]; then
          echo "All checks passed!"
        else
          echo "Checks failed! Please fix the issues."
          exit 1
        fi

    - name: Block PR merge on failure
      uses: actions/github-script@v4
      with:
        script: |
          const { data: pullRequest } = await github.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.payload.pull_request.number
          });

          if (pullRequest.mergeable_state === 'dirty' || steps.check_status.outputs.status === 'failure') {
            const { data: reviews } = await github.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            const reviewId = reviews.find(review => review.user.login === 'github-actions[bot]')?.id;
            if (reviewId) {
              await github.pulls.dismissReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                review_id: reviewId
              });
            }

            await github.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              event: 'REQUEST_CHANGES',
              body: 'Automated checks failed. Please fix the issues before merging.'
            });
          }